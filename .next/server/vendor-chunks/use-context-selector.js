"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-context-selector";
exports.ids = ["vendor-chunks/use-context-selector"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-context-selector/dist/index.modern.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/use-context-selector/dist/index.modern.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BridgeProvider: () => (/* binding */ BridgeProvider),\n/* harmony export */   createContext: () => (/* binding */ createContext),\n/* harmony export */   useBridgeValue: () => (/* binding */ useBridgeValue),\n/* harmony export */   useContext: () => (/* binding */ useContext),\n/* harmony export */   useContextSelector: () => (/* binding */ useContextSelector),\n/* harmony export */   useContextUpdate: () => (/* binding */ useContextUpdate)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/scheduler/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n\n\n\n\nconst CONTEXT_VALUE = Symbol();\nconst ORIGINAL_PROVIDER = Symbol();\nconst isSSR = typeof window === 'undefined' || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\nconst useIsomorphicLayoutEffect = isSSR ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\n// for preact that doesn't have runWithPriority\nconst runWithNormalPriority = scheduler__WEBPACK_IMPORTED_MODULE_1__.unstable_runWithPriority ? thunk => {\n  try {\n    (0,scheduler__WEBPACK_IMPORTED_MODULE_1__.unstable_runWithPriority)(scheduler__WEBPACK_IMPORTED_MODULE_1__.unstable_NormalPriority, thunk);\n  } catch (e) {\n    if (e.message === 'Not implemented.') {\n      thunk();\n    } else {\n      throw e;\n    }\n  }\n} : thunk => thunk();\nconst createProvider = ProviderOrig => {\n  const ContextProvider = ({\n    value,\n    children\n  }) => {\n    const valueRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);\n    const versionRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const [resolve, setResolve] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    if (resolve) {\n      resolve(value);\n      setResolve(null);\n    }\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    if (!contextValue.current) {\n      const listeners = new Set();\n      const update = (thunk, options) => {\n        (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.unstable_batchedUpdates)(() => {\n          versionRef.current += 1;\n          const action = {\n            n: versionRef.current\n          };\n          if (options != null && options.suspense) {\n            action.n *= -1; // this is intentional to make it temporary version\n            action.p = new Promise(r => {\n              setResolve(() => v => {\n                action.v = v;\n                delete action.p;\n                r(v);\n              });\n            });\n          }\n          listeners.forEach(listener => listener(action));\n          thunk();\n        });\n      };\n      contextValue.current = {\n        [CONTEXT_VALUE]: {\n          /* \"v\"alue     */v: valueRef,\n          /* versio\"n\"   */n: versionRef,\n          /* \"l\"isteners */l: listeners,\n          /* \"u\"pdate    */u: update\n        }\n      };\n    }\n    useIsomorphicLayoutEffect(() => {\n      valueRef.current = value;\n      versionRef.current += 1;\n      runWithNormalPriority(() => {\n        contextValue.current[CONTEXT_VALUE].l.forEach(listener => {\n          listener({\n            n: versionRef.current,\n            v: value\n          });\n        });\n      });\n    }, [value]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ProviderOrig, {\n      value: contextValue.current\n    }, children);\n  };\n  return ContextProvider;\n};\nconst identity = x => x;\n/**\n * This creates a special context for `useContextSelector`.\n *\n * @example\n * import { createContext } from 'use-context-selector';\n *\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nfunction createContext(defaultValue) {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n    [CONTEXT_VALUE]: {\n      /* \"v\"alue     */v: {\n        current: defaultValue\n      },\n      /* versio\"n\"   */n: {\n        current: -1\n      },\n      /* \"l\"isteners */l: new Set(),\n      /* \"u\"pdate    */u: f => f()\n    }\n  });\n  context[ORIGINAL_PROVIDER] = context.Provider;\n  context.Provider = createProvider(context.Provider);\n  delete context.Consumer; // no support for Consumer\n  return context;\n}\n/**\n * This hook returns context selected value by selector.\n *\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n *\n * The selector should return referentially equal result for same input for better performance.\n *\n * @example\n * import { useContextSelector } from 'use-context-selector';\n *\n * const firstName = useContextSelector(PersonContext, state => state.firstName);\n */\nfunction useContextSelector(context, selector) {\n  const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context)[CONTEXT_VALUE];\n  if (typeof process === 'object' && \"development\" !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextSelector requires special context');\n    }\n  }\n  const {\n    /* \"v\"alue     */v: {\n      current: value\n    },\n    /* versio\"n\"   */n: {\n      current: version\n    },\n    /* \"l\"isteners */l: listeners\n  } = contextValue;\n  const selected = selector(value);\n  const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((prev, action) => {\n    if (!action) {\n      // case for `dispatch()` below\n      return [value, selected];\n    }\n    if ('p' in action) {\n      throw action.p;\n    }\n    if (action.n === version) {\n      if (Object.is(prev[1], selected)) {\n        return prev; // bail out\n      }\n      return [value, selected];\n    }\n    try {\n      if ('v' in action) {\n        if (Object.is(prev[0], action.v)) {\n          return prev; // do not update\n        }\n        const nextSelected = selector(action.v);\n        if (Object.is(prev[1], nextSelected)) {\n          return prev; // do not update\n        }\n        return [action.v, nextSelected];\n      }\n    } catch (e) {\n      // ignored (stale props or some other reason)\n    }\n    return [...prev]; // schedule update\n  }, [value, selected]);\n  if (!Object.is(state[1], selected)) {\n    // schedule re-render\n    // this is safe because it's self contained\n    dispatch();\n  }\n  useIsomorphicLayoutEffect(() => {\n    listeners.add(dispatch);\n    return () => {\n      listeners.delete(dispatch);\n    };\n  }, [listeners]);\n  return state[1];\n}\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n *\n * @example\n * import { useContext } from 'use-context-selector';\n *\n * const person = useContext(PersonContext);\n */\nfunction useContext(context) {\n  return useContextSelector(context, identity);\n}\n/**\n * This hook returns an update function that accepts a thunk function\n *\n * Use this for a function that will change a value in\n * concurrent rendering in React 18.\n * Otherwise, there's no need to use this hook.\n *\n * @example\n * import { useContextUpdate } from 'use-context-selector';\n *\n * const update = useContextUpdate();\n *\n * // Wrap set state function\n * update(() => setState(...));\n *\n * // Experimental suspense mode\n * update(() => setState(...), { suspense: true });\n */\nfunction useContextUpdate(context) {\n  const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context)[CONTEXT_VALUE];\n  if (typeof process === 'object' && \"development\" !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextUpdate requires special context');\n    }\n  }\n  const {\n    u: update\n  } = contextValue;\n  return update;\n}\n/**\n * This is a Provider component for bridging multiple react roots\n *\n * @example\n * const valueToBridge = useBridgeValue(PersonContext);\n * return (\n *   <Renderer>\n *     <BridgeProvider context={PersonContext} value={valueToBridge}>\n *       {children}\n *     </BridgeProvider>\n *   </Renderer>\n * );\n */\nconst BridgeProvider = ({\n  context,\n  value,\n  children\n}) => {\n  const {\n    [ORIGINAL_PROVIDER]: ProviderOrig\n  } = context;\n  if (typeof process === 'object' && \"development\" !== 'production') {\n    if (!ProviderOrig) {\n      throw new Error('BridgeProvider requires special context');\n    }\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ProviderOrig, {\n    value\n  }, children);\n};\n/**\n * This hook return a value for BridgeProvider\n */\nconst useBridgeValue = context => {\n  const bridgeValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);\n  if (typeof process === 'object' && \"development\" !== 'production') {\n    if (!bridgeValue[CONTEXT_VALUE]) {\n      throw new Error('useBridgeValue requires special context');\n    }\n  }\n  return bridgeValue;\n};\n\n\n//# sourceMappingURL=index.modern.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-context-selector/dist/index.modern.mjs\n");

/***/ })

};
;